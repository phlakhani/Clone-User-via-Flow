<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <description>create and add each new Group Member records of new user into Group Member Collection, In order to insert it after</description>
        <name>add_each_New_GroupMember_into_GroupMember_Collection</name>
        <label>add each New GroupMember into GroupMember Collection</label>
        <locationX>138</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>newGroupMemberRec.GroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_group_member_record_for_new_user</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newGroupMemberRec.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newUserRec.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>collectionNewGroupMemebers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newGroupMemberRec</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_group_member_record_for_new_user</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>get Permission Set Id from each PermissionSetAssignment Record and add it into Collection</description>
        <name>add_each_Permission_Set_Ids_into_Collection</name>
        <label>add each Permission Set Ids into Collection</label>
        <locationX>138</locationX>
        <locationY>1946</locationY>
        <assignmentItems>
            <assignToReference>collectionAllPSids</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_over_PSA_Records_of_existing_user.PermissionSetId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_PSA_Records_of_existing_user</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign all info from existing user to new user variable in order to insert it later</description>
        <name>Clone_existing_User_details</name>
        <label>Clone existing User details</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>newUserRec.FirstName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>firstName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.LastName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Last_Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Email</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Username</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Username</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Alias</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Alias</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.CommunityNickname</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Nickname</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.TimeZoneSidKey</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.TimeZoneSidKey</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.LocaleSidKey</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.LocaleSidKey</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.LanguageLocaleKey</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.LanguageLocaleKey</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.EmailEncodingKey</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.EmailEncodingKey</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.ProfileId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.ProfileId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.UserRoleId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.UserRoleId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.IsActive</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Title</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.Title</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.CompanyName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.CompanyName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Department</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.Department</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.Division</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_existing_user_details.Division</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newUserRec.ManagerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ManagerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_New_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>in the loop, each group member&apos;s group id will be added into a GroupId collections</description>
        <name>collect_each_groups_Ids_into_GroupId_Collection</name>
        <label>collect each groups Ids into GroupId Collection</label>
        <locationX>138</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>collectionPGIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>collect_all_group_IDs_from_group_members.GroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>collect_all_group_IDs_from_group_members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Creat New PermissionSetAssignment record from each Permssion Set Id and add it into Collection to insert it later</description>
        <name>creat_PermissionSetAssignment_from_each_PS_Id</name>
        <label>Creat new PSA from each PS Id</label>
        <locationX>138</locationX>
        <locationY>2354</locationY>
        <assignmentItems>
            <assignToReference>newPSARec.PermissionSetId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_over_User_s_actual_Permission_Set.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newPSARec.AssigneeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newUserRec.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>collectionNewPSA</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newPSARec</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_User_s_actual_Permission_Set</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>check if user want to clone Permission Set/Group from existing user</description>
        <name>Check_if_To_Clone_Permission_Set_Goup</name>
        <label>Clone Permission Set/Group ?</label>
        <locationX>314</locationX>
        <locationY>1622</locationY>
        <defaultConnector>
            <targetReference>Success_Confirmation_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_clone_psg</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Permission_Set_Group</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_all_Permission_Set_Assigments_of_existing_user</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check from screen input if user selected to clone public groups from existing user</description>
        <name>Check_If_to_Clone_Public_groups</name>
        <label>Clone Public Groups ?</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Check_if_To_Clone_Permission_Set_Goup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Clone_Public_Groups</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Public_Groups</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_Group_Memeber_records_of_existing_user</targetReference>
            </connector>
            <label>Yes, Clone Public Groups</label>
        </rules>
    </decisions>
    <description>This Screen flow  is being used to Clone user from user record page by clicking  custom button. It will clone all essential user details and it can optionally clone Permission Set/Group, Public Groups &amp; Manager. 
Feel Free to Reach out to SalesforceFox.com for further information.</description>
    <environments>Default</environments>
    <formulas>
        <description>formula  to check if User selected Manager to clone, if yes, store existing user&apos;s manager id</description>
        <name>ManagerId</name>
        <dataType>String</dataType>
        <expression>IF(   {!Manager} =  true,   {!get_existing_user_details.ManagerId} , &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <description>Formula to provide hyperlink of newly cloned user</description>
        <name>newUserHyperLink</name>
        <dataType>String</dataType>
        <expression>HYPERLINK( &quot;/&quot;&amp; {!newUserRec.Id}  ,   &quot;Click Here &quot;, &quot;_blank&quot;)</expression>
    </formulas>
    <interviewLabel>Clone User via Screen Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Clone User via Screen Flow</label>
    <loops>
        <description>Loop over group member records to get all public group ids in collection</description>
        <name>collect_all_group_IDs_from_group_members</name>
        <label>collect all group IDs from group members</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <collectionReference>get_Group_Memeber_records_of_existing_user</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>collect_each_groups_Ids_into_GroupId_Collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Create_group_member_record_for_new_user</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop over GroupId collection to create new group members records for new user</description>
        <name>Create_group_member_record_for_new_user</name>
        <label>Create group member record  for new user</label>
        <locationX>50</locationX>
        <locationY>1082</locationY>
        <collectionReference>collectionPGIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>add_each_New_GroupMember_into_GroupMember_Collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>insert_groups_for_new_user</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop over PermissionSetAssignment Records to get Permission Set Ids of existing use and store it in collection</description>
        <name>Loop_over_PSA_Records_of_existing_user</name>
        <label>Loop over PSA Records of existing user</label>
        <locationX>50</locationX>
        <locationY>1838</locationY>
        <collectionReference>Get_all_Permission_Set_Assigments_of_existing_user</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>add_each_Permission_Set_Ids_into_Collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>get_All_Permission_Sets_except_owned_by_profile</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop over User&apos;s actual Permission Set and create new Permission Set assignment for new user</description>
        <name>Loop_over_User_s_actual_Permission_Set</name>
        <label>Loop over User&apos;s actual Permission Set</label>
        <locationX>50</locationX>
        <locationY>2246</locationY>
        <collectionReference>get_All_Permission_Sets_except_owned_by_profile</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>creat_PermissionSetAssignment_from_each_PS_Id</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Insert_Newly_Created_PSA_collection</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <description>Create new user from new user details  variable</description>
        <name>Create_New_User</name>
        <label>Create New User</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>Check_If_to_Clone_Public_groups</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <inputReference>newUserRec</inputReference>
    </recordCreates>
    <recordCreates>
        <description>Insert newly Created Collection of Group Members to have public groups for new user</description>
        <name>insert_groups_for_new_user</name>
        <label>insert groups for new user</label>
        <locationX>50</locationX>
        <locationY>1382</locationY>
        <connector>
            <targetReference>Check_if_To_Clone_Permission_Set_Goup</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <inputReference>collectionNewGroupMemebers</inputReference>
    </recordCreates>
    <recordCreates>
        <description>Insert Newly Create PSA collection insert to clone Permission Set/Group of new user</description>
        <name>Insert_Newly_Created_PSA_collection</name>
        <label>Insert Newly Created PSA collection</label>
        <locationX>50</locationX>
        <locationY>2546</locationY>
        <connector>
            <targetReference>Success_Confirmation_Screen</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen</targetReference>
        </faultConnector>
        <inputReference>collectionNewPSA</inputReference>
    </recordCreates>
    <recordLookups>
        <description>In order to get all permission Sets &amp; Groups of a existing user, get All PermissionSetAssignment records of this user</description>
        <name>Get_all_Permission_Set_Assigments_of_existing_user</name>
        <label>Get all Permission Set Assigments of existing user</label>
        <locationX>50</locationX>
        <locationY>1730</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_over_PSA_Records_of_existing_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>userId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>User&apos;s permission Sets contains a Permission Set which is owned by its profile,  we need to exclude that permission Set since it&apos;s unique and autogenerated for each user.</description>
        <name>get_All_Permission_Sets_except_owned_by_profile</name>
        <label>get All Permission Sets except owned by Profile</label>
        <locationX>50</locationX>
        <locationY>2138</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_over_User_s_actual_Permission_Set</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>collectionAllPSids</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsOwnedByProfile</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSet</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_existing_user_details</name>
        <label>get existing user details</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Capture_New_User_Details</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>userId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>In order to get Public group details,  get group member records of existing user</description>
        <name>get_Group_Memeber_records_of_existing_user</name>
        <label>get Group Memeber records  of existing user</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>collect_all_group_IDs_from_group_members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>userId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>GroupId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <description>Capture unique &amp; essential details of new user</description>
        <name>Capture_New_User_Details</name>
        <label>Capture New User Details</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Clone_existing_User_details</targetReference>
        </connector>
        <fields>
            <name>NewUserDetails</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;New User details :&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Capture_New_User_Details_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Capture_New_User_Details_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>firstName</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.FirstName</elementReference>
                    </defaultValue>
                    <fieldText>First Name</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Last_Name</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.LastName</elementReference>
                    </defaultValue>
                    <fieldText>Last Name</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Alias</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.Alias</elementReference>
                    </defaultValue>
                    <fieldText>Alias</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;strong style=&quot;color: rgb(221, 6, 6);&quot;&gt;Alias can not be more than 8 characters !&lt;/strong&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>LEN({!Alias})&lt;9</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Capture_New_User_Details_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Email</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.Email</elementReference>
                    </defaultValue>
                    <fieldText>Email</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Username</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.Username</elementReference>
                    </defaultValue>
                    <fieldText>Username</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;strong style=&quot;font-size: 12px; color: rgb(202, 9, 9);&quot;&gt;Username must be unique for each user ! &lt;/strong&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!Username}&lt;&gt;{!get_existing_user_details.Username}</formulaExpression>
                    </validationRule>
                </fields>
                <fields>
                    <name>Nickname</name>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>get_existing_user_details.CommunityNickname</elementReference>
                    </defaultValue>
                    <fieldText>Nickname</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;strong style=&quot;color: rgb(218, 2, 2);&quot;&gt;This Nickname is already in use ! &lt;/strong&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!Nickname}&lt;&gt;{!get_existing_user_details.CommunityNickname}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>Also_Clone_section</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;also clone existing user&apos;s : &lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Capture_New_User_Details_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Capture_New_User_Details_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Capture_New_User_Details_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Manager</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>true</booleanValue>
                    </defaultValue>
                    <fieldText>Manager</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Permission_Set_Group</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>true</booleanValue>
                    </defaultValue>
                    <fieldText>Permission Set &amp; Permission Group</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Public_Groups</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>true</booleanValue>
                    </defaultValue>
                    <fieldText>Public Groups</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>8</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Error screen will display error message in case Flow is not able to clone a user due to some issues</description>
        <name>Error_Screen</name>
        <label>Error_Screen</label>
        <locationX>754</locationX>
        <locationY>566</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>error_message</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;color: rgb(218, 2, 2);&quot;&gt;{!$Flow.FaultMessage}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Success_Confirmation_Screen</name>
        <label>Success Confirmation Screen</label>
        <locationX>314</locationX>
        <locationY>2786</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>confirmation_message</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(44, 150, 6); font-family: tahoma;&quot;&gt;Success ! &lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>MessageFindUserHere</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt; {!newUserHyperLink}  to see newly cloned user. &lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>get_existing_user_details</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>a collection to store ids of all permission set ids of  existing user</description>
        <name>collectionAllPSids</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The Collection variable  to store newly created  Group Member records for new user and to insert it later</description>
        <name>collectionNewGroupMemebers</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <description>The Collection variable  to store newly created Permission Set Assignment records for new user and to insert it later</description>
        <name>collectionNewPSA</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PermissionSetAssignment</objectType>
    </variables>
    <variables>
        <description>a collection to store ids of all Group Ids ids of  existing user</description>
        <name>collectionPGIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>A record variable to store detail of new Group Member record for new user</description>
        <name>newGroupMemberRec</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <description>A record variable to store detail of new Permission Set Assignment  record for new user</description>
        <name>newPSARec</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PermissionSetAssignment</objectType>
    </variables>
    <variables>
        <description>A record variable to store detail of new User record for new user</description>
        <name>newUserRec</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <description>A variable to store existing user&apos;s Id coming from User&apos;s custom link button</description>
        <name>userId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
